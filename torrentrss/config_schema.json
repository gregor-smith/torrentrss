{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"type": "object",
	"properties": {
		"exception_gui": {
			"description": "Type of GUI shown when an error occurs. 'easygui' is supported if the respective Python package is installed. 'notify-send' is supported if notify-send is on the PATH. If missing, no GUI is used, and the only way to find out the program failed is to read the latest log file.",
			"type": "string"
		},
		"remove_old_log_files_enabled": {
			"description": "If true, old log files are removed. Considered true if missing.",
			"type": "boolean"
		},
		"log_file_limit": {
			"description": "The number of log files to keep if remove_old_log_files_enabled is true. A limit of 3 would delete all but the 3 most recent logs. Defaults to 10 if missing.",
			"type": "integer",
			"minimum": 1
		},
		"feeds": {
			"type": "object",
			"patternProperties": {
				".+": {
					"type": "object",
					"properties": {
						"url": {
							"description": "The URL of the RSS feed.",
							"type": "string"
						},
						"user_agent": {
							"description": "User agent used to send the GET request to download the feed. If missing, the default Python Requests user agent is used.",
							"type": "string"
						},
						"enabled": {
							"description": "Considered true if missing",
							"type": "boolean"
						},
						"magnet_enabled": {
							"description": "If true, magnet URLs are used instead of torrent files if possible. Considered true if missing",
							"type": "boolean"
						},
						"torrent_url_enabled": {
							"description": "If true, the torrent file's URL is passed to the command. If false, the torrent file is downloaded, and the path to that file is passed to the command. Considered true if missing."
						},
						"hide_torrent_filename_enabled": {
							"description": "If true, the torrent's filename is replaced with its SHA1 hash. If false, the filename is unchanged, although invalid characters are replaced with underscores on Windows systems. Ignored if 'torrent_url_enabled' is false. Considered true if missing."
						},
						"subscriptions": {
							"type": "object",
							"patternProperties": {
								".+": {
									"type": "object",
									"properties": {
										"pattern": {
											"description": "A regular expression to match the torrents you want from the RSS feed. Must have a group to capture the episode number, like so: ([0-9]{2}). Because the config is a JSON file, double backslashes are required.",
											"type": "string"
										},
										"number": {
											"description": "The current episode number. Note that the type is a string - the episode number does not have to be exclusively digits. This property is updated automatically when the program downloads a new torrent for this subscription. Should be left alone unless for example you're adding a subscription and want it to start on episode 3.",
											"type": "string"
										},
										"directory": {
											"description": "The directory to which the torrent files are downloaded. If missing, the operating system's temporary directory is used.",
											"type": "string"
										},
										"command": {
											"description": "Command run after the torrent file is downloaded. '$PATH_OR_URL' is substituted for the torrent's URL, path, or magnet link, depending on the feed's configuration. If missing, the path or URL is launched with the default program for opening that protocol.",
											"type": "array",
											"items": {
												"type": "string"
											},
											"minItems": 1
										},
										"enabled": {
											"description": "Considered true if missing",
											"type": "boolean"
										}
									},
									"required": [
										"pattern"
									]
								}
							}
						}
					},
					"required": [
						"url",
						"subscriptions"
					]
				}
			}
		}
	},
	"required": [
		"feeds"
	]
}
